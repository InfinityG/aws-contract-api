// AWS SDK does not include access to API Gateway

module.exports = ApiGatewayApi;


var Api = require('./api')
  , inherits = require('util').inherits
  , format = require('util').format
  , getRestApis = require('debug')('ApiGatewayApi:getRestApis')
  , createRestApi = require('debug')('ApiGatewayApi:createRestApi')
  , createRestApiResource = require('debug')('ApiGatewayApi:createRestApiResource')
  , getRestApiResources = require('debug')('ApiGatewayApi:getRestApiResources')
  , deleteRestApiResource = require('debug')('ApiGatewayApi:deleteRestApiResource')
  , deleteRestApiMethod = require('debug')('ApiGatewayApi:deleteRestApiMethod')
  ;


function ApiGatewayApi(config) {
  Api.call(this, config);
}


inherits(ApiGatewayApi, Api);


/**
 * ### .getRestApis()
 *
 * List all APIs for the given region/account
 *
 * @api public
 * @returns {Promise}
 *
 */

ApiGatewayApi.prototype.getRestApis = function() {

  getRestApis('');

  var request = this.createRequest({
    method: 'GET',
    path: '/restapis',
  });

  return this.performRequest(request);

}


/**
 * ### .createRestApi(props)
 *
 * Create a new API
 *
 * @api public
 * @param {{name: String, description: String}} props
 * @returns {Promise}
 *
 */

ApiGatewayApi.prototype.createRestApi = function(props) {

  createRestApi('%j', props);

  var request = this.createRequest({
    method: 'POST',
    path: '/restapis',
    body: JSON.stringify(props),
  });

  return this.performRequest(request);

}


/**
 * ### .createRestApiResource(props, parent)
 *
 * @api public
 * @param {{pathPart: String}} props
 * @param {AwsRestApiResource} parent
 * @returns {Promise}
 *
 */

ApiGatewayApi.prototype.createRestApiResource = function(props, parent) {

  createRestApiResource('%j', props);

  var request = this.createRequest({
    method: 'POST',
    path: parent._links['resource:create-child'].href,
    body: JSON.stringify(props),
  });

  return this.performRequest(request);

}



/**
 * ### .getRestApiResources(props)
 *
 * Get list of API resources.
 *
 * ie. routes
 *
 * @api public
 * @param {{id: String, limit: Number}} props
 * @returns {Promise}
 *
 */

ApiGatewayApi.prototype.getRestApiResources = function(props) {

  props.limit = props.limit || 100;

  getRestApiResources('%j', props);

  var request = this.createRequest({
    method: 'GET',
    path: format('/restapis/%s/resources?limit=%d', props.id, props.limit),
  });

  return this.performRequest(request, true);

}


/**
 * ### .deleteRestApiResource(resource)
 *
 * Delete resource
 *
 * @api public
 * @param {AwsRestApiResource} resource
 * @returns {Promise}
 *
 */

ApiGatewayApi.prototype.deleteRestApiResource = function(resource) {

  deleteRestApiResource('id: \'%s\', path: \'%s\'', resource.id, resource.path);

  if (!resource._links || !resource._links['resource:delete']) {
    throw new Error('invalid AwsRestApiResource in deleteRestApiResource()');
  }

  var request = this.createRequest({
    method: 'DELETE',
    path: resource._links['resource:delete'].href,
  });

  return this.performRequest(request);

}


/**
 * ### .deleteRestApiMethod(method)
 *
 * @api public
 * @param {AwsRestApiMethod} method
 * @returns {Promise}
 *
 */

ApiGatewayApi.prototype.deleteRestApiMethod = function(method) {

  deleteRestApiMethod('href: \'%s\'', method.href);

  var request = this.createRequest({
    method: 'DELETE',
    path: method.href,
  });

  return this.performRequest(request);
  
}


